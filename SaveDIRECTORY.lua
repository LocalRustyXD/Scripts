local a=game:GetService("Players") local f=game:GetService("CoreGui") local g=game:GetService("RunService") local h=game:GetService("HttpService") local b=game:GetService("MarketplaceService") local e={["string"]={["Class"]="StringValue",["Value"]="Value"},["boolean"]={["Class"]="BoolValue",["Value"]="Value"},["number"]={["Class"]="NumberValue",["Value"]="Value"},["UDim"]={["Class"]="UICorner",["Value"]="CornerRadius"},["UDim2"]={["Class"]="UIGridLayout",["Value"]="CellSize"},["BrickColor"]={["Class"]="BrickColorValue",["Value"]="Value"},["Color3"]={["Class"]="Color3Value",["Value"]="Value"},["Vector2"]={["Class"]="UISizeConstraint",["Value"]="MinSize"},["Vector3"]={["Class"]="Vector3Value",["Value"]="Value"},["CFrame"]={["Class"]="CFrameValue",["Value"]="Value"},["NumberSequence"]={["Class"]="Beam",["Value"]="Transparency"},["ColorSequence"]={["Class"]="UIGradient",["Value"]="Color"},["NumberRange"]={["Class"]="StringValue",["Value"]="Value"},["Rect"]={["Class"]="ImageLabel",["Value"]="SliceCenter"},["Font"]={["Class"]="TextLabel",["Value"]="FontFace"}} local c=loadstring(game:HttpGet(("https://raw.githubusercontent.com/Hylician/Serialize/main/main"),true))() local function d(_)local a=0 for _,_ in pairs(_)do a+=1 end return a end local function i(b,_)local a=b:GetAttributes() if d(a)>=1 and not b:FindFirstChildOfClass("Actor")then local c=Instance.new("Actor",b) c.Name="Attributes" table.insert(_,c) for _,b in pairs(a)do local a=typeof(b) local z=e[a] if z then local a=Instance.new(z.Class,c) a.Name=_ a[z.Value]=b end end end end function saveinstance(j)local o,q,v local t={["mode"]="optimized",["noscripts"]=false,["scriptcache"]=true,["decomptype"]="legacy",["saveplayers"]=false,["saveattributes"]=true,["debug"]=false,["timeout"]=30} for a,_ in pairs(typeof(j)=="table"and j or{})do if t[a]~=nil then t[a]=_ end end local u,s=t.debug and"\t"or"",t.debug and"\n"or"" local d={["UnionOperation"]={["AssetId"]="Content",["ChildData"]="BinaryString",["FormFactor"]="Token",["MeshData"]="BinaryString",["PhysicsData"]="BinaryString"},["MeshPart"]={["PhysicsData"]="BinaryString"},["Terrain"]={["SmoothGrid"]="BinaryString",["MaterialColors"]="BinaryString"}} local _={} local function e(_)if t.noscripts then return string.format("-- %s was not decompiled because the option is off.",_:GetFullName())else if _:IsA("ModuleScript")then local db=table.clone(require(_))db._id=nil db._script=nil return c(db)end return string.format("-- %s was not decompiled because the option is off.", _:GetFullName()) end end local _=string.lower(tostring(t.mode)) local r={} if typeof(j)=="Instance"then table.insert(r,j)elseif _=="full"then local a=game:GetChildren() for _=1,#a do table.insert(r,a[_])end elseif _=="optimized"then local a={"Chat","TextChatService","MaterialService","InsertService","JointsService","Lighting","ReplicatedFirst","ReplicatedStorage","ServerStorage","StarterGui","StarterPack","StarterPlayer","Teams","Workspace"} for _=1,#a do table.insert(r,game:FindService(a[_]))end elseif _=="scripts"then local a=game:GetDescendants() local b={} for _=1,#a do local _=a[_] if _.ClassName=="LocalScript"or _.ClassName=="ModuleScript"then local _=_ while _.Parent and _.Parent~=game do _=_.Parent end if _.Parent then b[_]=true end end end for _ in pairs(b)do table.insert(r,_)end end local k={["BubbleChat"]=true,["Camera"]=true,["CameraScript"]=true,["ChatScript"]=true,["ControlScript"]=true,["ClientChatModules"]=true,["ChatServiceRunner"]=true,["ChatModules"]=true} local c={["Technology"]=true} local n="[\"&<>\']" local m={["\""]="&quot;",["&"]="&amp;",["<"]="&lt;",[">"]="&gt;",["\'"]="&apos;"} local _,l=pcall(function()local _=game:HttpGet("http://setup.roblox.com/versionQTStudio",true) local _=string.format("http://setup.roblox.com/%s-API-Dump.json",_) local a=h:JSONDecode(game:HttpGet(_,true)).Classes local e={} for _=1,#a do local f=a[_] local a=f.Members e[f.Name]={["Name"]=f.Name,["Superclass"]=f.Superclass,["Properties"]={}} for _=1,#a do local g=a[_] if g.MemberType=="Property"then local _=g.Serialization if g.Name=="MeshSize"or _.CanLoad then local a,b,d=true,false,g.Tags if d then for _=1,#d do local _=d[_] if _=="Deprecated"or(_=="NotScriptable"and not c[g.ValueType.Name])then a=false elseif _=="NotScriptable"and c[g.ValueType.Name]then b=true end end end if a then local _=e[f.Name] table.insert(_.Properties,{["Name"]=g.Name,["ValueType"]=g.ValueType.Name,["Hidden"]=b,["Special"]=false})end end end end end for _,b in pairs(d)do local a=e[_] for _,b in pairs(b)do table.insert(a.Properties,{["Name"]=_,["ValueType"]=b,["Special"]=true})end end return e end) local c=setmetatable({},{["__index"]=function(_,a)local c={} local b=l[a] while b do local a=b.Properties for _=1,#a do table.insert(c,a[_])end b=l[b.Superclass]end table.sort(c,function(a,_)return a.Name<_.Name end) _[a]=c return c end}) local j=setmetatable({["count"]=0},{["__index"]=function(b,_)b.count+=1 local a=string.format("RBX%s",b.count) b[_]=a return a end}) local function d(_)return math.floor(o/(0x400^_)*10)/10 end local function h()local b,_=nil,{"b","kb","mb","gb","tb"} for a,_ in ipairs(_)do if o<0x400^a then b=string.format("%s%s",d(a-1),_) break end end return b end local function d()local _,_=pcall(function()local _=b:GetProductInfo(game.PlaceId) return _ and _.Name or string.format("place%s",game.PlaceId)end) return string.format("%s.rbxlx",string.gsub(_,"[^%w%s_]","_"))end local p=(function()local _=Instance.new("TextLabel",f:FindFirstChild("RobloxGui")) _.BackgroundTransparency=1 _.Font=Enum.Font.Code _.Name="TextLabel" _.Position=UDim2.new(0.7,0,0,-20) _.Size=UDim2.new(0.3,0,0,20) _.Text="Starting..." _.TextColor3=Color3.new(1,1,1) _.TextScaled=true _.TextStrokeTransparency=0.7 _.TextWrapped=true _.TextXAlignment=Enum.TextXAlignment.Right _.TextYAlignment=Enum.TextYAlignment.Top return _ end)() local function f()local _=table.concat(v) appendfile(q,_) o+=#_ p.Text=string.format("Saving (%s)",h()) v={} return g.RenderStepped:Wait()end local function b(a)if#v>0x1600 then f()end for _=1,#a do local f=false repeat local h=a[_] local g=h.ClassName local d={} coroutine.wrap(function()if t.saveattributes then i(h,d) local a=h:GetDescendants() for _=1,#a do local _=a[_] i(_,d)end end end)() if h.RobloxLocked or k[h.Name]or not l[g]then f=true break end local a=c[g] v[#v+1]=string.format("%s<Item class=\"%s\" referent=\"%s\">%s<Properties>",string.format("%s%s",s,u),g,j[h],string.format("%s%s%s",s,u,u)) for _=1,#a do local b=false repeat local c=a[_] local o,d local _=c.Ok if _==nil then local a,_=pcall(function()return(c.Hidden and gethiddenproperty(h,c.Name)or h[c.Name])end) c.Ok=a if a then d=_ else b=true break end elseif _==true then d=(c.Hidden and gethiddenproperty(h,c.Name)or h[c.Name])elseif _==false then b=true break end local _,l=c.ValueType if"BrickColor"==_ then l="int" o=d.Number elseif"Color3"==_ then o=string.format("<R>%s</R><G>%s</G><B>%s</B>",d.R,d.G,d.B)elseif"ColorSequence"==_ then local b={} local a=d.Keypoints for _=1,#a do local _=a[_] b[#b+1]=string.format("%s %s %s %s 0 ",_.Time,_.Value.R,_.Value.G,_.Value.B)end o=table.concat(b," ")elseif"Content"==_ then o=string.format("<url>%s</url>",string.gsub(d,n,m))elseif"BinaryString"==_ or"SharedString"==_ then o=string.format(c.Name=="MaterialColors"and"<![CDATA[%s]]>"or"%s",d)elseif"CFrame"==_ and((g=="Attachment"or g=="Bone")and c.Name=="CFrame"or(g~="Attachment"and g~="Bone"))then local g,c,a,_,b,f,e,d,j,k,i,h=d:GetComponents() l="CoordinateFrame" o=string.format("<X>%s</X><Y>%s</Y><Z>%s</Z><R00>%s</R00><R01>%s</R01><R02>%s</R02><R10>%s</R10><R11>%s</R11><R12>%s</R12><R20>%s</R20><R21>%s</R21><R22>%s</R22>",g,c,a,_,b,f,e,d,j,k,i,h)elseif"NumberRange"==_ then o=string.format("%s %s",d.Min,d.Max)elseif"NumberSequence"==_ then local b={} local a=d.Keypoints for _=1,#a do local _=a[_] b[#b+1]=string.format("%s %s %s ",_.Time,_.Value,_.Envelope)end o=table.concat(b," ")elseif"PhysicalProperties"==_ then if d then o=string.format("<CustomPhysics>true</CustomPhysics><Density>%s</Density><Friction>%s</Friction><Elasticity>%s</Elasticity><FrictionWeight>%s</FrictionWeight><ElasticityWeight>%s</ElasticityWeight>",d.Density,d.Friction,d.Elasticity,d.FrictionWeight,d.ElasticityWeight)else o="<CustomPhysics>false</CustomPhysics>"end elseif"ProtectedString"==_ then if c.Name=="Source"then o=h.ClassName=="Script"and"-- Script failed to decompile or ignored."or e(h)else o=d or"" end o=string.gsub(o,n,m)elseif"Rect2D"==_ or"Rect"==_ then l=("Rect"==_ and"Rect2D"or _) o=string.format("<min><X>%s</X><Y>%s</Y></min><max><X>%s</X><Y>%s</Y></max>",d.Min.X,d.Min.Y,d.Max.X,d.Max.Y)elseif"UDim"==_ then o=string.format("<S>%s</S><O>%s</O>",d.Scale,d.Offset)elseif"UDim2"==_ then o=string.format("<XS>%s</XS><XO>%s</XO><YS>%s</YS><YO>%s</YO>",d.X.Scale,d.X.Offset,d.Y.Scale,d.Y.Offset)elseif"Vector2"==_ then o=string.format("<X>%s</X><Y>%s</Y>",d.X,d.Y)elseif"Vector3"==_ and g~="Bone"and g~="Attachment"then o=string.format("<X>%s</X><Y>%s</Y><Z>%s</Z>",d.X,d.Y,d.Z)elseif"bool"==_ then o=tostring(d)elseif((g=="TextLabel"or g=="TextBox")and c.Name~="Transparency"or(g~="TextLabel"and g~="TextBox"))and"float"==_ or"double"==_ or"int"==_ or"int64"==_ then l=("double"==_ and"float"or _) o=d elseif"string"==_ then o=string.gsub(d,n,m)elseif"Font"==_ then local _=typeof(d)=="EnumItem"and(d==Enum.Font.Unknown and Font.fromEnum(Enum.Font.Arial)or Font.fromEnum(d))or typeof(d)=="Font"and d o=string.format("<Family><url>%s</url></Family><Weight>%s</Weight><Style>%s</Style>",_.Family,_.Weight.Value,_.Style.Name)elseif"EnumItem"==typeof(d)then l="token" o=d.Value elseif"BasePart"==_ or"Attachment"==_ then l="Ref" o=d and j[d]or"null"end if o then v[#v+1]=string.format("%s<%s name=\"%s\">%s</%s>",string.format("%s%s%s%s",s,u,u,u),(l or _),c.Name=="MeshSize"and"InitialSize"or c.Name,o,(l or _))end b=true until true if not b then break end end v[#v+1]=string.format("%s</Properties>",string.format("%s%s%s",s,u,u)) local _=h:GetChildren() if#_~=0 then b(_,v)end v[#v+1]=string.format("%s</Item>",string.format("%s%s",s,u)) coroutine.wrap(function()for _,_ in pairs(d)do _:Destroy()end end)() f=true until true if not f then break end end end local function _()writefile(q,string.format("<roblox xmlns:xmime=\"http://www.w3.org/2005/05/xmlmime\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"http://www.roblox.com/roblox.xsd\" version=\"4\">%s<External>null</External>%s<External>nil</External>",string.format("%s%s",s,u),string.format("%s%s",s,u))) b(r) table.insert(v,"</roblox>") return f()end local a=a:GetPlayers() for _=1,#a do local _=a[_] k[_.Name]=(not t.saveplayers)end do q,o,v=d(),0,{} local b=tick() local a,_=pcall(_) local b=(tick()-b) if a then p.Text=string.format("Saved to the file %s in %d seconds.\nFile Size: %s",q,b,h()) task.wait(math.log10(b)*4)else p.Text="Save failed, check F9 console for more info." warn("Error encountered while saving\nInformation about error:") print(_) task.wait(3+math.log10(b))end return p:Remove()end end
saveinstance(game.ReplicatedStorage.__DIRECTORY)
